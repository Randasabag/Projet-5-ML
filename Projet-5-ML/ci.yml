name: CI

on:
  push:
    branches:
      - main  # Remplace par la branche de ton choix
  pull_request:
    branches:
      - main  # Exécute les tests sur les demandes de tirage vers la branche principale

jobs:
  test:
    runs-on: ubuntu-latest  # Utiliser un environnement Ubuntu

    steps:
      - name: Purge Cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
          
      - name: Checkout code
        uses: actions/checkout@v2  # Vérifier le code de la branche

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'  # Spécifie la version de Python

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Projet-5-ML/requirements.txt   # Installe les dépendances depuis requirements.txt
     
      - name: Set FLASK_APP
        run: |
          export FLASK_APP=Projet-5-ML/flask_app.py  # Indiquer où est votre application Flask

      - name: Start Flask app
        run: |
            gunicorn -w 4 -b 127.0.0.1:8000 Projet-5-ML.flask_app:app --log-level debug &
            sleep 20  # Augmentez le délai pour attendre que gunicorn démarre

      - name: Test generate_tags endpoint
        run: |
          curl -X POST http://127.0.0.1:8000/generate_tags -d '{"question":"How do you create a dataframe?"}' -H "Content-Type: application/json"

          
      - name: Check if Flask is running 
        run: |
          ps aux | grep flask  # Vérifie si le processus Flask est lancé


      - name: Run tests 
        run: |
          pytest Projet-5-ML/tests/ --disable-warnings --maxfail=1 